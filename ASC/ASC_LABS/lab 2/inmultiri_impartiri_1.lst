     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 03                          a db 3
    14 00000001 07                          b db 7
    15 00000002 06                          c db 6
    16 00000003 0A00                        d dw 10
    17                                  ;d+[(a+b)*5-(c+c)*5]
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 A0[00000000]                    mov al,[a];al=a=3
    21 00000005 0205[01000000]                  add al,[b];al=a+b=10
    22 0000000B B405                            mov ah,5;ah=5
    23 0000000D F6E4                            mul ah;ax=ah*al=(a+b)*5=50
    24 0000000F 6689C3                          mov bx,ax;bx=ax=50
    25 00000012 A0[02000000]                    mov al,[c];al=c=6
    26 00000017 0205[02000000]                  add al,[c];al=c+c=12
    27 0000001D B405                            mov ah,5;ah=5
    28 0000001F F6E4                            mul ah;ax=ah*al=(c+c)*5=60
    29 00000021 6629C3                          sub bx,ax;bx=bx-ax=[(a+b)*5-(c+c)*5]=50-60=-10
    30 00000024 66031D[03000000]                add bx,[d];ax=ax+d=d+[(a+b)*5-(c+c)*5]=0      
    31                                          
