        -:    0:Source:/mnt/d/OOP_laboratoare/Lab_2-4/testOfertaRepo.c
        -:    0:Graph:/mnt/d/OOP_laboratoare/Lab_2-4/cmake-build-debug-coverage/CMakeFiles/Lab_2_4.dir/testOfertaRepo.c.gcno
        -:    0:Data:/mnt/d/OOP_laboratoare/Lab_2-4/cmake-build-debug-coverage/CMakeFiles/Lab_2_4.dir/testOfertaRepo.c.gcda
        -:    0:Runs:1
        -:    1:#include <assert.h>
        -:    2:#include <string.h>
        -:    3:#include "ofertaRepo.h"
        -:    4:#include "oferta.h"
        -:    5:#include <stdlib.h>
        -:    6:#pragma warning(disable:4996)
        -:    7:
function testAdaugareOferta called 1 returned 100% blocks executed 67%
        1:    8:void testAdaugareOferta() {
        1:    9:    listaOferte *o = createOList();
        1:    9-block  0
call    0 returned 1
        -:   10:
        1:   11:    oferta* OfertaNoua = createOferta(1,"mare", "spania", "23.01",100);
call    0 returned 1
       1*:   12:    assert(adauga_oferta(o, OfertaNoua) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   12-block  0
call    3 never executed
        -:   13:
       1*:   14:    assert(o->lista[0]->id == OfertaNoua->id);
        1:   14-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   14-block  1
call    2 never executed
       1*:   15:    assert(strcmp(o->lista[0]->tip, OfertaNoua->tip) == 0);
        1:   15-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   15-block  1
call    2 never executed
       1*:   16:    assert(strcmp(o->lista[0]->destinatie, OfertaNoua->destinatie) == 0);
        1:   16-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   16-block  1
call    2 never executed
       1*:   17:    assert(strcmp(o->lista[0]->data_plecare, OfertaNoua->data_plecare) == 0);
        1:   17-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   17-block  1
call    2 never executed
       1*:   18:    assert(o->lista[0]->pret == OfertaNoua->pret);
        1:   18-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   18-block  1
call    2 never executed
        -:   19:
        -:   20:
        1:   21:    oferta* AltaOferta = createOferta(1,"munte", "albania", "23.01",100);
        1:   21-block  0
call    0 returned 1
       1*:   22:    assert(adauga_oferta(o, AltaOferta) == -1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   22-block  0
call    3 never executed
        1:   23:    deleteLista(o);
        1:   23-block  0
call    0 returned 1
        1:   24:}
        -:   25:
function testStergereOferta called 1 returned 100% blocks executed 80%
        1:   26:void testStergereOferta() {
        1:   27:    listaOferte *o = createOList();
        1:   27-block  0
call    0 returned 1
        -:   28:
        1:   29:    oferta* OfertaNoua = createOferta(1, "mare", "spania", "21.01", 100);
call    0 returned 1
        -:   30:
        1:   31:    adauga_oferta(o, OfertaNoua);
call    0 returned 1
        1:   32:    oferta* OfertaNoua2 = createOferta(2,"mare","spania","21.01",100);
call    0 returned 1
        1:   33:    adauga_oferta(o, OfertaNoua2);
call    0 returned 1
        -:   34:
       1*:   35:    assert(sterge_oferta(o, OfertaNoua) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   35-block  0
call    3 never executed
       1*:   36:    assert(o->size == 1);
        1:   36-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   36-block  1
call    2 never executed
       1*:   37:    assert(sterge_oferta(o, OfertaNoua) == -1);
        1:   37-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   37-block  1
call    3 never executed
        1:   38:    deleteLista(o);
        1:   38-block  0
call    0 returned 1
        -:   39:
        1:   40:}
        -:   41:
function testModificareOferta called 1 returned 100% blocks executed 70%
        1:   42:void testModificareOferta() {
        1:   43:    listaOferte *o = createOList();
        1:   43-block  0
call    0 returned 1
        -:   44:
        1:   45:    oferta* OfertaNoua = createOferta(1,"mare","spania","21.01", 100);
call    0 returned 1
        -:   46:
        1:   47:    oferta* OfertaMod = createOferta(1,"munte","italia","21.03",150);
call    0 returned 1
        -:   48:
        1:   49:    adauga_oferta(o, OfertaNoua);
call    0 returned 1
       1*:   50:    assert(modifica_oferta(o, OfertaMod) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   50-block  0
call    3 never executed
       1*:   51:    assert(o->lista[0]->id == OfertaMod->id);
        1:   51-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   51-block  1
call    2 never executed
       1*:   52:    assert(strcmp(o->lista[0]->tip, OfertaMod->tip) == 0);
        1:   52-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   52-block  1
call    2 never executed
       1*:   53:    assert(strcmp(o->lista[0]->destinatie, OfertaMod->destinatie) == 0);
        1:   53-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   53-block  1
call    2 never executed
       1*:   54:    assert(strcmp(o->lista[0]->data_plecare, OfertaMod->data_plecare) == 0);
        1:   54-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   54-block  1
call    2 never executed
       1*:   55:    assert(o->lista[0]->pret == OfertaMod->pret);
        1:   55-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   55-block  1
call    2 never executed
        -:   56:
        1:   57:    oferta* OfertaMod2 = createOferta(2,"mare","spania","21.11",123);
        1:   57-block  0
call    0 returned 1
       1*:   58:    assert(modifica_oferta(o, OfertaMod2) == -1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   58-block  0
call    3 never executed
        1:   59:    deleteLista(o);
        1:   59-block  0
call    0 returned 1
        1:   60:}
        -:   61:
